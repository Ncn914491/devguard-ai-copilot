// Mocks generated by Mockito 5.4.5 from annotations
// in devguard_ai_copilot/test/supabase_services_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:logging/logging.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:realtime_client/src/constants.dart' as _i11;
import 'package:realtime_client/src/message.dart' as _i9;
import 'package:realtime_client/src/push.dart' as _i6;
import 'package:realtime_client/src/retry_timer.dart' as _i5;
import 'package:realtime_client/src/types.dart' as _i10;
import 'package:supabase/supabase.dart' as _i2;
import 'package:web_socket_channel/web_socket_channel.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFunctionsClient_0 extends _i1.SmartFake
    implements _i2.FunctionsClient {
  _FakeFunctionsClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_1 extends _i1.SmartFake
    implements _i2.SupabaseStorageClient {
  _FakeSupabaseStorageClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_2 extends _i1.SmartFake
    implements _i2.RealtimeClient {
  _FakeRealtimeClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_3 extends _i1.SmartFake
    implements _i2.PostgrestClient {
  _FakePostgrestClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueClient_4 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQuerySchema_6 extends _i1.SmartFake
    implements _i2.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_7<T1> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_8 extends _i1.SmartFake
    implements _i2.RealtimeChannel {
  _FakeRealtimeChannel_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueAdminApi_9 extends _i1.SmartFake
    implements _i2.GoTrueAdminApi {
  _FakeGoTrueAdminApi_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueMFAApi_10 extends _i1.SmartFake implements _i2.GoTrueMFAApi {
  _FakeGoTrueMFAApi_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponse_11 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOAuthResponse_12 extends _i1.SmartFake implements _i2.OAuthResponse {
  _FakeOAuthResponse_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthSessionUrlResponse_13 extends _i1.SmartFake
    implements _i2.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendResponse_14 extends _i1.SmartFake
    implements _i2.ResendResponse {
  _FakeResendResponse_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserResponse_15 extends _i1.SmartFake implements _i2.UserResponse {
  _FakeUserResponse_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObject_16 extends _i1.SmartFake implements Object {
  _FakeObject_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestQueryBuilder_17<T> extends _i1.SmartFake
    implements _i2.PostgrestQueryBuilder<T> {
  _FakePostgrestQueryBuilder_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestTransformBuilder_18<T1> extends _i1.SmartFake
    implements _i2.PostgrestTransformBuilder<T1> {
  _FakePostgrestTransformBuilder_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponsePostgrestBuilder_19<T1, S, R> extends _i1.SmartFake
    implements _i2.ResponsePostgrestBuilder<T1, S, R> {
  _FakeResponsePostgrestBuilder_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestBuilder_20<T1, S, R> extends _i1.SmartFake
    implements _i2.PostgrestBuilder<T1, S, R> {
  _FakePostgrestBuilder_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_21 extends _i1.SmartFake implements Uri {
  _FakeUri_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_22<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_23 extends _i1.SmartFake implements Duration {
  _FakeDuration_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketChannel_24 extends _i1.SmartFake
    implements _i4.WebSocketChannel {
  _FakeWebSocketChannel_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRetryTimer_25 extends _i1.SmartFake implements _i5.RetryTimer {
  _FakeRetryTimer_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePush_26 extends _i1.SmartFake implements _i6.Push {
  _FakePush_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimePresence_27 extends _i1.SmartFake
    implements _i2.RealtimePresence {
  _FakeRealtimePresence_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_28 extends _i1.SmartFake implements _i2.User {
  _FakeUser_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSession_29 extends _i1.SmartFake implements _i2.Session {
  _FakeSession_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i2.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_0(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i2.FunctionsClient);

  @override
  set functions(_i2.FunctionsClient? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_1(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.SupabaseStorageClient);

  @override
  set storage(_i2.SupabaseStorageClient? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_2(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i2.RealtimeClient);

  @override
  set realtime(_i2.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i2.PostgrestClient);

  @override
  set rest(_i2.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_4(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i2.GoTrueClient);

  @override
  _i2.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i2.SupabaseQueryBuilder);

  @override
  _i2.SupabaseQuerySchema schema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #schema,
          [schema],
        ),
        returnValue: _FakeSupabaseQuerySchema_6(
          this,
          Invocation.method(
            #schema,
            [schema],
          ),
        ),
      ) as _i2.SupabaseQuerySchema);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {
            #params: params,
            #get: get,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {
              #params: params,
              #get: get,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.RealtimeChannel channel(
    String? name, {
    _i2.RealtimeChannelConfig? opts = const _i2.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  List<_i2.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i2.RealtimeChannel>[],
      ) as List<_i2.RealtimeChannel>);

  @override
  _i3.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i3.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #removeChannel,
            [channel],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i2.GoTrueClient {
  MockGoTrueClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GoTrueAdminApi get admin => (super.noSuchMethod(
        Invocation.getter(#admin),
        returnValue: _FakeGoTrueAdminApi_9(
          this,
          Invocation.getter(#admin),
        ),
      ) as _i2.GoTrueAdminApi);

  @override
  set admin(_i2.GoTrueAdminApi? _admin) => super.noSuchMethod(
        Invocation.setter(
          #admin,
          _admin,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.GoTrueMFAApi get mfa => (super.noSuchMethod(
        Invocation.getter(#mfa),
        returnValue: _FakeGoTrueMFAApi_10(
          this,
          Invocation.getter(#mfa),
        ),
      ) as _i2.GoTrueMFAApi);

  @override
  set mfa(_i2.GoTrueMFAApi? _mfa) => super.noSuchMethod(
        Invocation.setter(
          #mfa,
          _mfa,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Stream<_i2.AuthState> get onAuthStateChange => (super.noSuchMethod(
        Invocation.getter(#onAuthStateChange),
        returnValue: _i3.Stream<_i2.AuthState>.empty(),
      ) as _i3.Stream<_i2.AuthState>);

  @override
  _i3.Stream<_i2.AuthState> get onAuthStateChangeSync => (super.noSuchMethod(
        Invocation.getter(#onAuthStateChangeSync),
        returnValue: _i3.Stream<_i2.AuthState>.empty(),
      ) as _i3.Stream<_i2.AuthState>);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i3.Future<_i2.AuthResponse> signInAnonymously({
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
          {
            #data: data,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
            {
              #data: data,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i2.OtpChannel? channel = _i2.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #emailRedirectTo: emailRedirectTo,
            #data: data,
            #captchaToken: captchaToken,
            #channel: channel,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPassword,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #signInWithPassword,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.OAuthResponse> getOAuthSignInUrl({
    required _i2.OAuthProvider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOAuthSignInUrl,
          [],
          {
            #provider: provider,
            #redirectTo: redirectTo,
            #scopes: scopes,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i3.Future<_i2.OAuthResponse>.value(_FakeOAuthResponse_12(
          this,
          Invocation.method(
            #getOAuthSignInUrl,
            [],
            {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i3.Future<_i2.OAuthResponse>);

  @override
  _i3.Future<_i2.AuthSessionUrlResponse> exchangeCodeForSession(
          String? authCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #exchangeCodeForSession,
          [authCode],
        ),
        returnValue: _i3.Future<_i2.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_13(
          this,
          Invocation.method(
            #exchangeCodeForSession,
            [authCode],
          ),
        )),
      ) as _i3.Future<_i2.AuthSessionUrlResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signInWithIdToken({
    required _i2.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithIdToken,
          [],
          {
            #provider: provider,
            #idToken: idToken,
            #accessToken: accessToken,
            #nonce: nonce,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #signInWithIdToken,
            [],
            {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i2.OtpChannel? channel = _i2.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithOtp,
          [],
          {
            #email: email,
            #phone: phone,
            #emailRedirectTo: emailRedirectTo,
            #shouldCreateUser: shouldCreateUser,
            #data: data,
            #captchaToken: captchaToken,
            #channel: channel,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    String? token,
    required _i2.OtpType? type,
    String? redirectTo,
    String? captchaToken,
    String? tokenHash,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [],
          {
            #email: email,
            #phone: phone,
            #token: token,
            #type: type,
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
            #tokenHash: tokenHash,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #verifyOTP,
            [],
            {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
              #tokenHash: tokenHash,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<String> getSSOSignInUrl({
    String? providerId,
    String? domain,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSSOSignInUrl,
          [],
          {
            #providerId: providerId,
            #domain: domain,
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #getSSOSignInUrl,
            [],
            {
              #providerId: providerId,
              #domain: domain,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<_i2.AuthResponse> refreshSession([String? refreshToken]) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshSession,
          [refreshToken],
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #refreshSession,
            [refreshToken],
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<void> reauthenticate() => (super.noSuchMethod(
        Invocation.method(
          #reauthenticate,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i2.ResendResponse> resend({
    String? email,
    String? phone,
    required _i2.OtpType? type,
    String? emailRedirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resend,
          [],
          {
            #email: email,
            #phone: phone,
            #type: type,
            #emailRedirectTo: emailRedirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue:
            _i3.Future<_i2.ResendResponse>.value(_FakeResendResponse_14(
          this,
          Invocation.method(
            #resend,
            [],
            {
              #email: email,
              #phone: phone,
              #type: type,
              #emailRedirectTo: emailRedirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.ResendResponse>);

  @override
  _i3.Future<_i2.UserResponse> getUser([String? jwt]) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [jwt],
        ),
        returnValue: _i3.Future<_i2.UserResponse>.value(_FakeUserResponse_15(
          this,
          Invocation.method(
            #getUser,
            [jwt],
          ),
        )),
      ) as _i3.Future<_i2.UserResponse>);

  @override
  _i3.Future<_i2.UserResponse> updateUser(
    _i2.UserAttributes? attributes, {
    String? emailRedirectTo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [attributes],
          {#emailRedirectTo: emailRedirectTo},
        ),
        returnValue: _i3.Future<_i2.UserResponse>.value(_FakeUserResponse_15(
          this,
          Invocation.method(
            #updateUser,
            [attributes],
            {#emailRedirectTo: emailRedirectTo},
          ),
        )),
      ) as _i3.Future<_i2.UserResponse>);

  @override
  _i3.Future<_i2.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSession,
          [refreshToken],
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #setSession,
            [refreshToken],
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionFromUrl,
          [originUrl],
          {#storeSession: storeSession},
        ),
        returnValue: _i3.Future<_i2.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_13(
          this,
          Invocation.method(
            #getSessionFromUrl,
            [originUrl],
            {#storeSession: storeSession},
          ),
        )),
      ) as _i3.Future<_i2.AuthSessionUrlResponse>);

  @override
  _i3.Future<void> signOut(
          {_i2.SignOutScope? scope = _i2.SignOutScope.local}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
          {#scope: scope},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordForEmail,
          [email],
          {
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i2.UserIdentity>> getUserIdentities() => (super.noSuchMethod(
        Invocation.method(
          #getUserIdentities,
          [],
        ),
        returnValue:
            _i3.Future<List<_i2.UserIdentity>>.value(<_i2.UserIdentity>[]),
      ) as _i3.Future<List<_i2.UserIdentity>>);

  @override
  _i3.Future<_i2.OAuthResponse> getLinkIdentityUrl(
    _i2.OAuthProvider? provider, {
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLinkIdentityUrl,
          [provider],
          {
            #redirectTo: redirectTo,
            #scopes: scopes,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i3.Future<_i2.OAuthResponse>.value(_FakeOAuthResponse_12(
          this,
          Invocation.method(
            #getLinkIdentityUrl,
            [provider],
            {
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i3.Future<_i2.OAuthResponse>);

  @override
  _i3.Future<void> unlinkIdentity(_i2.UserIdentity? identity) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlinkIdentity,
          [identity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setInitialSession(String? jsonStr) => (super.noSuchMethod(
        Invocation.method(
          #setInitialSession,
          [jsonStr],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverSession,
          [jsonStr],
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_11(
          this,
          Invocation.method(
            #recoverSession,
            [jsonStr],
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  void startAutoRefresh() => super.noSuchMethod(
        Invocation.method(
          #startAutoRefresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAutoRefresh() => super.noSuchMethod(
        Invocation.method(
          #stopAutoRefresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyAllSubscribers(
    _i2.AuthChangeEvent? event, {
    _i2.Session? session,
    bool? broadcast = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyAllSubscribers,
          [event],
          {
            #session: session,
            #broadcast: broadcast,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  Object notifyException(
    Object? exception, [
    StackTrace? stackTrace,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyException,
          [
            exception,
            stackTrace,
          ],
        ),
        returnValue: _FakeObject_16(
          this,
          Invocation.method(
            #notifyException,
            [
              exception,
              stackTrace,
            ],
          ),
        ),
      ) as Object);
}

/// A class which mocks [PostgrestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestClient extends _i1.Mock implements _i2.PostgrestClient {
  MockPostgrestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i2.PostgrestClient auth(String? token) => (super.noSuchMethod(
        Invocation.method(
          #auth,
          [token],
        ),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.method(
            #auth,
            [token],
          ),
        ),
      ) as _i2.PostgrestClient);

  @override
  _i2.PostgrestClient setAuth(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setAuth,
          [token],
        ),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.method(
            #setAuth,
            [token],
          ),
        ),
      ) as _i2.PostgrestClient);

  @override
  _i2.PostgrestQueryBuilder<void> from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakePostgrestQueryBuilder_17<void>(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i2.PostgrestQueryBuilder<void>);

  @override
  _i2.PostgrestClient schema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #schema,
          [schema],
        ),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.method(
            #schema,
            [schema],
          ),
        ),
      ) as _i2.PostgrestClient);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<dynamic, dynamic>? params,
    bool? get = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {
            #params: params,
            #get: get,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {
              #params: params,
              #get: get,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [PostgrestFilterBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestFilterBuilder<T> extends _i1.Mock
    implements _i2.PostgrestFilterBuilder<T> {
  MockPostgrestFilterBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostgrestFilterBuilder<T> copyWithUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #copyWithUrl,
          [url],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #copyWithUrl,
            [url],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> not(
    String? column,
    String? operator,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #not,
          [
            column,
            operator,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #not,
            [
              column,
              operator,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> or(
    String? filters, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #or,
          [filters],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #or,
            [filters],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> eq(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #eq,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #eq,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> neq(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #neq,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #neq,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> gt(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #gt,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #gt,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> gte(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #gte,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #gte,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> lt(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #lt,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #lt,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> lte(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #lte,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #lte,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> like(
    String? column,
    String? pattern,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #like,
          [
            column,
            pattern,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #like,
            [
              column,
              pattern,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> likeAllOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #likeAllOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #likeAllOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> likeAnyOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #likeAnyOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #likeAnyOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<T> ilike(
    String? column,
    String? pattern,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #ilike,
          [
            column,
            pattern,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #ilike,
            [
              column,
              pattern,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> ilikeAllOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #ilikeAllOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #ilikeAllOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> ilikeAnyOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #ilikeAnyOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #ilikeAnyOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<T> isFilter(
    String? column,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFilter,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #isFilter,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> inFilter(
    String? column,
    List<dynamic>? values,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #inFilter,
          [
            column,
            values,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #inFilter,
            [
              column,
              values,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> contains(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #contains,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #contains,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> containedBy(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #containedBy,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #containedBy,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeLt(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeLt,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeLt,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeGt(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeGt,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeGt,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeGte(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeGte,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeGte,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeLte(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeLte,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeLte,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeAdjacent(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeAdjacent,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeAdjacent,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> overlaps(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overlaps,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #overlaps,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> textSearch(
    String? column,
    String? query, {
    String? config,
    _i2.TextSearchType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #textSearch,
          [
            column,
            query,
          ],
          {
            #config: config,
            #type: type,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #textSearch,
            [
              column,
              query,
            ],
            {
              #config: config,
              #type: type,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> filter(
    String? column,
    String? operator,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filter,
          [
            column,
            operator,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #filter,
            [
              column,
              operator,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> match(Map<String, Object>? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #match,
          [query],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #match,
            [query],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> setHeader(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHeader,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #setHeader,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<List<Map<String, dynamic>>> select(
          [String? columns = '*']) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [columns],
        ),
        returnValue:
            _FakePostgrestTransformBuilder_18<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #select,
            [columns],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<List<Map<String, dynamic>>>);

  @override
  _i2.PostgrestTransformBuilder<T> order(
    String? column, {
    bool? ascending = false,
    bool? nullsFirst = false,
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #order,
          [column],
          {
            #ascending: ascending,
            #nullsFirst: nullsFirst,
            #referencedTable: referencedTable,
          },
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #order,
            [column],
            {
              #ascending: ascending,
              #nullsFirst: nullsFirst,
              #referencedTable: referencedTable,
            },
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<T> limit(
    int? count, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #limit,
          [count],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #limit,
            [count],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<T> range(
    int? from,
    int? to, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #range,
          [
            from,
            to,
          ],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #range,
            [
              from,
              to,
            ],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<Map<String, dynamic>> single() =>
      (super.noSuchMethod(
        Invocation.method(
          #single,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<Map<String, dynamic>>(
          this,
          Invocation.method(
            #single,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<Map<String, dynamic>>);

  @override
  _i2.PostgrestTransformBuilder<Map<String, dynamic>?> maybeSingle() =>
      (super.noSuchMethod(
        Invocation.method(
          #maybeSingle,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<Map<String, dynamic>?>(
          this,
          Invocation.method(
            #maybeSingle,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<Map<String, dynamic>?>);

  @override
  _i2.PostgrestTransformBuilder<String> csv() => (super.noSuchMethod(
        Invocation.method(
          #csv,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<String>(
          this,
          Invocation.method(
            #csv,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<String>);

  @override
  _i2.ResponsePostgrestBuilder<_i2.PostgrestResponse<T>, T, T> count(
          [_i2.CountOption? count = _i2.CountOption.exact]) =>
      (super.noSuchMethod(
        Invocation.method(
          #count,
          [count],
        ),
        returnValue:
            _FakeResponsePostgrestBuilder_19<_i2.PostgrestResponse<T>, T, T>(
          this,
          Invocation.method(
            #count,
            [count],
          ),
        ),
      ) as _i2.ResponsePostgrestBuilder<_i2.PostgrestResponse<T>, T, T>);

  @override
  _i2.PostgrestBuilder<void, void, void> head() => (super.noSuchMethod(
        Invocation.method(
          #head,
          [],
        ),
        returnValue: _FakePostgrestBuilder_20<void, void, void>(
          this,
          Invocation.method(
            #head,
            [],
          ),
        ),
      ) as _i2.PostgrestBuilder<void, void, void>);

  @override
  _i2.ResponsePostgrestBuilder<Map<String, dynamic>,
          Map<String, dynamic>, Map<String, dynamic>>
      geojson() => (super.noSuchMethod(
            Invocation.method(
              #geojson,
              [],
            ),
            returnValue: _FakeResponsePostgrestBuilder_19<Map<String, dynamic>,
                Map<String, dynamic>, Map<String, dynamic>>(
              this,
              Invocation.method(
                #geojson,
                [],
              ),
            ),
          ) as _i2.ResponsePostgrestBuilder<Map<String, dynamic>,
              Map<String, dynamic>, Map<String, dynamic>>);

  @override
  _i2.PostgrestBuilder<String, String, String> explain({
    bool? analyze = false,
    bool? verbose = false,
    bool? settings = false,
    bool? buffers = false,
    bool? wal = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #explain,
          [],
          {
            #analyze: analyze,
            #verbose: verbose,
            #settings: settings,
            #buffers: buffers,
            #wal: wal,
          },
        ),
        returnValue: _FakePostgrestBuilder_20<String, String, String>(
          this,
          Invocation.method(
            #explain,
            [],
            {
              #analyze: analyze,
              #verbose: verbose,
              #settings: settings,
              #buffers: buffers,
              #wal: wal,
            },
          ),
        ),
      ) as _i2.PostgrestBuilder<String, String, String>);

  @override
  _i2.PostgrestBuilder<U, U, T> withConverter<U>(
          _i2.PostgrestConverter<U, T>? converter) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [converter],
        ),
        returnValue: _FakePostgrestBuilder_20<U, U, T>(
          this,
          Invocation.method(
            #withConverter,
            [converter],
          ),
        ),
      ) as _i2.PostgrestBuilder<U, U, T>);

  @override
  Uri appendSearchParams(
    String? key,
    String? value, [
    Uri? url,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendSearchParams,
          [
            key,
            value,
            url,
          ],
        ),
        returnValue: _FakeUri_21(
          this,
          Invocation.method(
            #appendSearchParams,
            [
              key,
              value,
              url,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri overrideSearchParams(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overrideSearchParams,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeUri_21(
          this,
          Invocation.method(
            #overrideSearchParams,
            [
              key,
              value,
            ],
          ),
        ),
      ) as Uri);

  @override
  _i3.Stream<T> asStream() => (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue: _i3.Stream<T>.empty(),
      ) as _i3.Stream<T>);

  @override
  _i3.Future<T> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #catchError,
                  [onError],
                  {#test: test},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_22<T>(
              this,
              Invocation.method(
                #catchError,
                [onError],
                {#test: test},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<U> then<U>(
    _i3.FutureOr<U> Function(T)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<U>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (U v) => _i3.Future<U>.value(v),
            ) ??
            _FakeFuture_22<U>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
      ) as _i3.Future<U>);

  @override
  _i3.Future<T> timeout(
    Duration? timeLimit, {
    _i3.FutureOr<T> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #timeout,
                  [timeLimit],
                  {#onTimeout: onTimeout},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_22<T>(
              this,
              Invocation.method(
                #timeout,
                [timeLimit],
                {#onTimeout: onTimeout},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<T> whenComplete(_i3.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #whenComplete,
                  [action],
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_22<T>(
              this,
              Invocation.method(
                #whenComplete,
                [action],
              ),
            ),
      ) as _i3.Future<T>);
}

/// A class which mocks [PostgrestTransformBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestTransformBuilder<T> extends _i1.Mock
    implements _i2.PostgrestTransformBuilder<T> {
  MockPostgrestTransformBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostgrestTransformBuilder<T> copyWithUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #copyWithUrl,
          [url],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #copyWithUrl,
            [url],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<T> setHeader(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHeader,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #setHeader,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<List<Map<String, dynamic>>> select(
          [String? columns = '*']) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [columns],
        ),
        returnValue:
            _FakePostgrestTransformBuilder_18<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #select,
            [columns],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<List<Map<String, dynamic>>>);

  @override
  _i2.PostgrestTransformBuilder<T> order(
    String? column, {
    bool? ascending = false,
    bool? nullsFirst = false,
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #order,
          [column],
          {
            #ascending: ascending,
            #nullsFirst: nullsFirst,
            #referencedTable: referencedTable,
          },
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #order,
            [column],
            {
              #ascending: ascending,
              #nullsFirst: nullsFirst,
              #referencedTable: referencedTable,
            },
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<T> limit(
    int? count, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #limit,
          [count],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #limit,
            [count],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<T> range(
    int? from,
    int? to, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #range,
          [
            from,
            to,
          ],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestTransformBuilder_18<T>(
          this,
          Invocation.method(
            #range,
            [
              from,
              to,
            ],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<Map<String, dynamic>> single() =>
      (super.noSuchMethod(
        Invocation.method(
          #single,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<Map<String, dynamic>>(
          this,
          Invocation.method(
            #single,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<Map<String, dynamic>>);

  @override
  _i2.PostgrestTransformBuilder<Map<String, dynamic>?> maybeSingle() =>
      (super.noSuchMethod(
        Invocation.method(
          #maybeSingle,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<Map<String, dynamic>?>(
          this,
          Invocation.method(
            #maybeSingle,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<Map<String, dynamic>?>);

  @override
  _i2.PostgrestTransformBuilder<String> csv() => (super.noSuchMethod(
        Invocation.method(
          #csv,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_18<String>(
          this,
          Invocation.method(
            #csv,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<String>);

  @override
  _i2.ResponsePostgrestBuilder<_i2.PostgrestResponse<T>, T, T> count(
          [_i2.CountOption? count = _i2.CountOption.exact]) =>
      (super.noSuchMethod(
        Invocation.method(
          #count,
          [count],
        ),
        returnValue:
            _FakeResponsePostgrestBuilder_19<_i2.PostgrestResponse<T>, T, T>(
          this,
          Invocation.method(
            #count,
            [count],
          ),
        ),
      ) as _i2.ResponsePostgrestBuilder<_i2.PostgrestResponse<T>, T, T>);

  @override
  _i2.PostgrestBuilder<void, void, void> head() => (super.noSuchMethod(
        Invocation.method(
          #head,
          [],
        ),
        returnValue: _FakePostgrestBuilder_20<void, void, void>(
          this,
          Invocation.method(
            #head,
            [],
          ),
        ),
      ) as _i2.PostgrestBuilder<void, void, void>);

  @override
  _i2.ResponsePostgrestBuilder<Map<String, dynamic>,
          Map<String, dynamic>, Map<String, dynamic>>
      geojson() => (super.noSuchMethod(
            Invocation.method(
              #geojson,
              [],
            ),
            returnValue: _FakeResponsePostgrestBuilder_19<Map<String, dynamic>,
                Map<String, dynamic>, Map<String, dynamic>>(
              this,
              Invocation.method(
                #geojson,
                [],
              ),
            ),
          ) as _i2.ResponsePostgrestBuilder<Map<String, dynamic>,
              Map<String, dynamic>, Map<String, dynamic>>);

  @override
  _i2.PostgrestBuilder<String, String, String> explain({
    bool? analyze = false,
    bool? verbose = false,
    bool? settings = false,
    bool? buffers = false,
    bool? wal = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #explain,
          [],
          {
            #analyze: analyze,
            #verbose: verbose,
            #settings: settings,
            #buffers: buffers,
            #wal: wal,
          },
        ),
        returnValue: _FakePostgrestBuilder_20<String, String, String>(
          this,
          Invocation.method(
            #explain,
            [],
            {
              #analyze: analyze,
              #verbose: verbose,
              #settings: settings,
              #buffers: buffers,
              #wal: wal,
            },
          ),
        ),
      ) as _i2.PostgrestBuilder<String, String, String>);

  @override
  _i2.PostgrestBuilder<U, U, T> withConverter<U>(
          _i2.PostgrestConverter<U, T>? converter) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [converter],
        ),
        returnValue: _FakePostgrestBuilder_20<U, U, T>(
          this,
          Invocation.method(
            #withConverter,
            [converter],
          ),
        ),
      ) as _i2.PostgrestBuilder<U, U, T>);

  @override
  Uri appendSearchParams(
    String? key,
    String? value, [
    Uri? url,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendSearchParams,
          [
            key,
            value,
            url,
          ],
        ),
        returnValue: _FakeUri_21(
          this,
          Invocation.method(
            #appendSearchParams,
            [
              key,
              value,
              url,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri overrideSearchParams(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overrideSearchParams,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeUri_21(
          this,
          Invocation.method(
            #overrideSearchParams,
            [
              key,
              value,
            ],
          ),
        ),
      ) as Uri);

  @override
  _i3.Stream<T> asStream() => (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue: _i3.Stream<T>.empty(),
      ) as _i3.Stream<T>);

  @override
  _i3.Future<T> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #catchError,
                  [onError],
                  {#test: test},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_22<T>(
              this,
              Invocation.method(
                #catchError,
                [onError],
                {#test: test},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<U> then<U>(
    _i3.FutureOr<U> Function(T)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<U>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (U v) => _i3.Future<U>.value(v),
            ) ??
            _FakeFuture_22<U>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
      ) as _i3.Future<U>);

  @override
  _i3.Future<T> timeout(
    Duration? timeLimit, {
    _i3.FutureOr<T> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #timeout,
                  [timeLimit],
                  {#onTimeout: onTimeout},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_22<T>(
              this,
              Invocation.method(
                #timeout,
                [timeLimit],
                {#onTimeout: onTimeout},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<T> whenComplete(_i3.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #whenComplete,
                  [action],
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_22<T>(
              this,
              Invocation.method(
                #whenComplete,
                [action],
              ),
            ),
      ) as _i3.Future<T>);
}

/// A class which mocks [RealtimeClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRealtimeClient extends _i1.Mock implements _i2.RealtimeClient {
  MockRealtimeClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set accessToken(String? _accessToken) => super.noSuchMethod(
        Invocation.setter(
          #accessToken,
          _accessToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i2.RealtimeChannel> get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: <_i2.RealtimeChannel>[],
      ) as List<_i2.RealtimeChannel>);

  @override
  set channels(List<_i2.RealtimeChannel>? _channels) => super.noSuchMethod(
        Invocation.setter(
          #channels,
          _channels,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get endPoint => (super.noSuchMethod(
        Invocation.getter(#endPoint),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#endPoint),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  Map<String, dynamic> get params => (super.noSuchMethod(
        Invocation.getter(#params),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_23(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);

  @override
  _i2.WebSocketTransport get transport => (super.noSuchMethod(
        Invocation.getter(#transport),
        returnValue: (
          String url,
          Map<String, String> headers,
        ) =>
            _FakeWebSocketChannel_24(
          this,
          Invocation.getter(#transport),
        ),
      ) as _i2.WebSocketTransport);

  @override
  int get heartbeatIntervalMs => (super.noSuchMethod(
        Invocation.getter(#heartbeatIntervalMs),
        returnValue: 0,
      ) as int);

  @override
  set heartbeatIntervalMs(int? _heartbeatIntervalMs) => super.noSuchMethod(
        Invocation.setter(
          #heartbeatIntervalMs,
          _heartbeatIntervalMs,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set heartbeatTimer(_i3.Timer? _heartbeatTimer) => super.noSuchMethod(
        Invocation.setter(
          #heartbeatTimer,
          _heartbeatTimer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set pendingHeartbeatRef(String? _pendingHeartbeatRef) => super.noSuchMethod(
        Invocation.setter(
          #pendingHeartbeatRef,
          _pendingHeartbeatRef,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: 0,
      ) as int);

  @override
  set ref(int? _ref) => super.noSuchMethod(
        Invocation.setter(
          #ref,
          _ref,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.RetryTimer get reconnectTimer => (super.noSuchMethod(
        Invocation.getter(#reconnectTimer),
        returnValue: _FakeRetryTimer_25(
          this,
          Invocation.getter(#reconnectTimer),
        ),
      ) as _i5.RetryTimer);

  @override
  set reconnectTimer(_i5.RetryTimer? _reconnectTimer) => super.noSuchMethod(
        Invocation.setter(
          #reconnectTimer,
          _reconnectTimer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set logger(
          void Function(
            String?,
            String?,
            dynamic,
          )? _logger) =>
      super.noSuchMethod(
        Invocation.setter(
          #logger,
          _logger,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimeEncode get encode => (super.noSuchMethod(
        Invocation.getter(#encode),
        returnValue: (
          dynamic payload,
          void Function(String) callback,
        ) {},
      ) as _i2.RealtimeEncode);

  @override
  set encode(_i2.RealtimeEncode? _encode) => super.noSuchMethod(
        Invocation.setter(
          #encode,
          _encode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimeDecode get decode => (super.noSuchMethod(
        Invocation.getter(#decode),
        returnValue: (
          String payload,
          void Function(dynamic) callback,
        ) {},
      ) as _i2.RealtimeDecode);

  @override
  set decode(_i2.RealtimeDecode? _decode) => super.noSuchMethod(
        Invocation.setter(
          #decode,
          _decode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.TimerCalculation get reconnectAfterMs => (super.noSuchMethod(
        Invocation.getter(#reconnectAfterMs),
        returnValue: (int tries) => 0,
      ) as _i5.TimerCalculation);

  @override
  set reconnectAfterMs(_i5.TimerCalculation? _reconnectAfterMs) =>
      super.noSuchMethod(
        Invocation.setter(
          #reconnectAfterMs,
          _reconnectAfterMs,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set conn(_i4.WebSocketChannel? _conn) => super.noSuchMethod(
        Invocation.setter(
          #conn,
          _conn,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<dynamic> get sendBuffer => (super.noSuchMethod(
        Invocation.getter(#sendBuffer),
        returnValue: <dynamic>[],
      ) as List<dynamic>);

  @override
  set sendBuffer(List<dynamic>? _sendBuffer) => super.noSuchMethod(
        Invocation.setter(
          #sendBuffer,
          _sendBuffer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<Function>> get stateChangeCallbacks => (super.noSuchMethod(
        Invocation.getter(#stateChangeCallbacks),
        returnValue: <String, List<Function>>{},
      ) as Map<String, List<Function>>);

  @override
  set stateChangeCallbacks(
          Map<String, List<Function>>? _stateChangeCallbacks) =>
      super.noSuchMethod(
        Invocation.setter(
          #stateChangeCallbacks,
          _stateChangeCallbacks,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get longpollerTimeout => (super.noSuchMethod(
        Invocation.getter(#longpollerTimeout),
        returnValue: 0,
      ) as int);

  @override
  set longpollerTimeout(int? _longpollerTimeout) => super.noSuchMethod(
        Invocation.setter(
          #longpollerTimeout,
          _longpollerTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connState(_i2.SocketStates? _connState) => super.noSuchMethod(
        Invocation.setter(
          #connState,
          _connState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAccessToken(_i3.Future<String?> Function()? _customAccessToken) =>
      super.noSuchMethod(
        Invocation.setter(
          #customAccessToken,
          _customAccessToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get connectionState => (super.noSuchMethod(
        Invocation.getter(#connectionState),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#connectionState),
        ),
      ) as String);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  String get endPointURL => (super.noSuchMethod(
        Invocation.getter(#endPointURL),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#endPointURL),
        ),
      ) as String);

  @override
  _i3.Future<void> connect() => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disconnect({
    int? code,
    String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
          {
            #code: code,
            #reason: reason,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  List<_i2.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i2.RealtimeChannel>[],
      ) as List<_i2.RealtimeChannel>);

  @override
  _i3.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i3.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #removeChannel,
            [channel],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  void log([
    String? kind,
    String? msg,
    dynamic data,
    _i8.Level? level = _i8.Level.FINEST,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [
            kind,
            msg,
            data,
            level,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onOpen(void Function()? callback) => super.noSuchMethod(
        Invocation.method(
          #onOpen,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose(void Function(dynamic)? callback) => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(void Function(dynamic)? callback) => super.noSuchMethod(
        Invocation.method(
          #onError,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onMessage(void Function(dynamic)? callback) => super.noSuchMethod(
        Invocation.method(
          #onMessage,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void remove(_i2.RealtimeChannel? channel) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [channel],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimeChannel channel(
    String? topic, [
    _i2.RealtimeChannelConfig? params = const _i2.RealtimeChannelConfig(),
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [
            topic,
            params,
          ],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #channel,
            [
              topic,
              params,
            ],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  String? push(_i9.Message? message) => (super.noSuchMethod(Invocation.method(
        #push,
        [message],
      )) as String?);

  @override
  void onConnMessage(String? rawMessage) => super.noSuchMethod(
        Invocation.method(
          #onConnMessage,
          [rawMessage],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String makeRef() => (super.noSuchMethod(
        Invocation.method(
          #makeRef,
          [],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #makeRef,
            [],
          ),
        ),
      ) as String);

  @override
  _i3.Future<void> setAuth(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setAuth,
          [token],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void leaveOpenTopic(String? topic) => super.noSuchMethod(
        Invocation.method(
          #leaveOpenTopic,
          [topic],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> sendHeartbeat() => (super.noSuchMethod(
        Invocation.method(
          #sendHeartbeat,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [RealtimeChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockRealtimeChannel extends _i1.Mock implements _i2.RealtimeChannel {
  MockRealtimeChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get joinedOnce => (super.noSuchMethod(
        Invocation.getter(#joinedOnce),
        returnValue: false,
      ) as bool);

  @override
  set joinedOnce(bool? _joinedOnce) => super.noSuchMethod(
        Invocation.setter(
          #joinedOnce,
          _joinedOnce,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Push get joinPush => (super.noSuchMethod(
        Invocation.getter(#joinPush),
        returnValue: _FakePush_26(
          this,
          Invocation.getter(#joinPush),
        ),
      ) as _i6.Push);

  @override
  set joinPush(_i6.Push? _joinPush) => super.noSuchMethod(
        Invocation.setter(
          #joinPush,
          _joinPush,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimePresence get presence => (super.noSuchMethod(
        Invocation.getter(#presence),
        returnValue: _FakeRealtimePresence_27(
          this,
          Invocation.getter(#presence),
        ),
      ) as _i2.RealtimePresence);

  @override
  set presence(_i2.RealtimePresence? _presence) => super.noSuchMethod(
        Invocation.setter(
          #presence,
          _presence,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get broadcastEndpointURL => (super.noSuchMethod(
        Invocation.getter(#broadcastEndpointURL),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#broadcastEndpointURL),
        ),
      ) as String);

  @override
  set broadcastEndpointURL(String? _broadcastEndpointURL) => super.noSuchMethod(
        Invocation.setter(
          #broadcastEndpointURL,
          _broadcastEndpointURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get subTopic => (super.noSuchMethod(
        Invocation.getter(#subTopic),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#subTopic),
        ),
      ) as String);

  @override
  String get topic => (super.noSuchMethod(
        Invocation.getter(#topic),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#topic),
        ),
      ) as String);

  @override
  Map<String, dynamic> get params => (super.noSuchMethod(
        Invocation.getter(#params),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  set params(Map<String, dynamic>? _params) => super.noSuchMethod(
        Invocation.setter(
          #params,
          _params,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimeClient get socket => (super.noSuchMethod(
        Invocation.getter(#socket),
        returnValue: _FakeRealtimeClient_2(
          this,
          Invocation.getter(#socket),
        ),
      ) as _i2.RealtimeClient);

  @override
  bool get canPush => (super.noSuchMethod(
        Invocation.getter(#canPush),
        returnValue: false,
      ) as bool);

  @override
  String get joinRef => (super.noSuchMethod(
        Invocation.getter(#joinRef),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#joinRef),
        ),
      ) as String);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get isErrored => (super.noSuchMethod(
        Invocation.getter(#isErrored),
        returnValue: false,
      ) as bool);

  @override
  bool get isJoined => (super.noSuchMethod(
        Invocation.getter(#isJoined),
        returnValue: false,
      ) as bool);

  @override
  bool get isJoining => (super.noSuchMethod(
        Invocation.getter(#isJoining),
        returnValue: false,
      ) as bool);

  @override
  bool get isLeaving => (super.noSuchMethod(
        Invocation.getter(#isLeaving),
        returnValue: false,
      ) as bool);

  @override
  void rejoinUntilConnected() => super.noSuchMethod(
        Invocation.method(
          #rejoinUntilConnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RealtimeChannel subscribe([
    void Function(
      _i2.RealtimeSubscribeStatus,
      Object?,
    )? callback,
    Duration? timeout,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [
            callback,
            timeout,
          ],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #subscribe,
            [
              callback,
              timeout,
            ],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  List<_i2.SinglePresenceState> presenceState() => (super.noSuchMethod(
        Invocation.method(
          #presenceState,
          [],
        ),
        returnValue: <_i2.SinglePresenceState>[],
      ) as List<_i2.SinglePresenceState>);

  @override
  _i3.Future<_i2.ChannelResponse> track(
    Map<String, dynamic>? payload, [
    Map<String, dynamic>? opts = const {},
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #track,
          [
            payload,
            opts,
          ],
        ),
        returnValue:
            _i3.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i3.Future<_i2.ChannelResponse>);

  @override
  _i3.Future<_i2.ChannelResponse> untrack(
          [Map<String, dynamic>? opts = const {}]) =>
      (super.noSuchMethod(
        Invocation.method(
          #untrack,
          [opts],
        ),
        returnValue:
            _i3.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i3.Future<_i2.ChannelResponse>);

  @override
  _i2.RealtimeChannel onPostgresChanges({
    required _i2.PostgresChangeEvent? event,
    String? schema,
    String? table,
    _i2.PostgresChangeFilter? filter,
    required void Function(_i2.PostgresChangePayload)? callback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPostgresChanges,
          [],
          {
            #event: event,
            #schema: schema,
            #table: table,
            #filter: filter,
            #callback: callback,
          },
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPostgresChanges,
            [],
            {
              #event: event,
              #schema: schema,
              #table: table,
              #filter: filter,
              #callback: callback,
            },
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onBroadcast({
    required String? event,
    required void Function(Map<String, dynamic>)? callback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #onBroadcast,
          [],
          {
            #event: event,
            #callback: callback,
          },
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onBroadcast,
            [],
            {
              #event: event,
              #callback: callback,
            },
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onPresenceSync(
          void Function(_i2.RealtimePresenceSyncPayload)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPresenceSync,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPresenceSync,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onPresenceJoin(
          void Function(_i2.RealtimePresenceJoinPayload)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPresenceJoin,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPresenceJoin,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onPresenceLeave(
          void Function(_i2.RealtimePresenceLeavePayload)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onPresenceLeave,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onPresenceLeave,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onSystemEvents(void Function(dynamic)? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #onSystemEvents,
          [callback],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onSystemEvents,
            [callback],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel onEvents(
    String? type,
    _i10.ChannelFilter? filter,
    _i2.BindingCallback? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onEvents,
          [
            type,
            filter,
            callback,
          ],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #onEvents,
            [
              type,
              filter,
              callback,
            ],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i2.RealtimeChannel off(
    String? type,
    Map<String, String>? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #off,
          [
            type,
            filter,
          ],
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #off,
            [
              type,
              filter,
            ],
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  _i6.Push push(
    _i11.ChannelEvents? event,
    Map<String, dynamic>? payload, [
    Duration? timeout,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #push,
          [
            event,
            payload,
            timeout,
          ],
        ),
        returnValue: _FakePush_26(
          this,
          Invocation.method(
            #push,
            [
              event,
              payload,
              timeout,
            ],
          ),
        ),
      ) as _i6.Push);

  @override
  _i3.Future<_i2.ChannelResponse> sendBroadcastMessage({
    required String? event,
    required Map<String, dynamic>? payload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendBroadcastMessage,
          [],
          {
            #event: event,
            #payload: payload,
          },
        ),
        returnValue:
            _i3.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i3.Future<_i2.ChannelResponse>);

  @override
  _i3.Future<_i2.ChannelResponse> send({
    required _i10.RealtimeListenTypes? type,
    String? event,
    required Map<String, dynamic>? payload,
    Map<String, dynamic>? opts = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [],
          {
            #type: type,
            #event: event,
            #payload: payload,
            #opts: opts,
          },
        ),
        returnValue:
            _i3.Future<_i2.ChannelResponse>.value(_i2.ChannelResponse.ok),
      ) as _i3.Future<_i2.ChannelResponse>);

  @override
  void updateJoinPayload(Map<String, dynamic>? payload) => super.noSuchMethod(
        Invocation.method(
          #updateJoinPayload,
          [payload],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<String> unsubscribe([Duration? timeout]) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [timeout],
        ),
        returnValue: _i3.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #unsubscribe,
            [timeout],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  dynamic onMessage(
    String? event,
    dynamic payload, [
    String? ref,
  ]) =>
      super.noSuchMethod(Invocation.method(
        #onMessage,
        [
          event,
          payload,
          ref,
        ],
      ));

  @override
  bool isMember(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #isMember,
          [topic],
        ),
        returnValue: false,
      ) as bool);

  @override
  void rejoin([Duration? timeout]) => super.noSuchMethod(
        Invocation.method(
          #rejoin,
          [timeout],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forceRejoin([Duration? timeout]) => super.noSuchMethod(
        Invocation.method(
          #forceRejoin,
          [timeout],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void trigger(
    String? type, [
    dynamic payload,
    String? ref,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #trigger,
          [
            type,
            payload,
            ref,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String replyEventName(String? ref) => (super.noSuchMethod(
        Invocation.method(
          #replyEventName,
          [ref],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #replyEventName,
            [ref],
          ),
        ),
      ) as String);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  Map<String, dynamic> get appMetadata => (super.noSuchMethod(
        Invocation.getter(#appMetadata),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  String get aud => (super.noSuchMethod(
        Invocation.getter(#aud),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#aud),
        ),
      ) as String);

  @override
  String get createdAt => (super.noSuchMethod(
        Invocation.getter(#createdAt),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#createdAt),
        ),
      ) as String);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Session].
///
/// See the documentation for Mockito's code generation for more information.
class MockSession extends _i1.Mock implements _i2.Session {
  MockSession() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as String);

  @override
  String get tokenType => (super.noSuchMethod(
        Invocation.getter(#tokenType),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#tokenType),
        ),
      ) as String);

  @override
  _i2.User get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeUser_28(
          this,
          Invocation.getter(#user),
        ),
      ) as _i2.User);

  @override
  set expiresAt(int? _expiresAt) => super.noSuchMethod(
        Invocation.setter(
          #expiresAt,
          _expiresAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isExpired => (super.noSuchMethod(
        Invocation.getter(#isExpired),
        returnValue: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i2.Session copyWith({
    String? accessToken,
    int? expiresIn,
    String? refreshToken,
    String? tokenType,
    String? providerToken,
    String? providerRefreshToken,
    _i2.User? user,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #accessToken: accessToken,
            #expiresIn: expiresIn,
            #refreshToken: refreshToken,
            #tokenType: tokenType,
            #providerToken: providerToken,
            #providerRefreshToken: providerRefreshToken,
            #user: user,
          },
        ),
        returnValue: _FakeSession_29(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #accessToken: accessToken,
              #expiresIn: expiresIn,
              #refreshToken: refreshToken,
              #tokenType: tokenType,
              #providerToken: providerToken,
              #providerRefreshToken: providerRefreshToken,
              #user: user,
            },
          ),
        ),
      ) as _i2.Session);
}
