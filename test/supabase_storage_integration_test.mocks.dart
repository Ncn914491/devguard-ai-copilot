// Mocks generated by Mockito 5.4.5 from annotations
// in devguard_ai_copilot/test/supabase_storage_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i4;
import 'dart:typed_data' as _i6;
import 'dart:ui' as _i9;

import 'package:devguard_ai_copilot/core/services/cross_platform_storage_service.dart'
    as _i10;
import 'package:devguard_ai_copilot/core/services/supabase_file_system_service.dart'
    as _i8;
import 'package:devguard_ai_copilot/core/supabase/services/supabase_storage_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:supabase_flutter/supabase_flutter.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SupabaseStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseStorageService extends _i1.Mock
    implements _i2.SupabaseStorageService {
  MockSupabaseStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> uploadFile(
    String? bucket,
    String? path,
    _i4.File? file, {
    Map<String, String>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            bucket,
            path,
            file,
          ],
          {#metadata: metadata},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #uploadFile,
            [
              bucket,
              path,
              file,
            ],
            {#metadata: metadata},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Stream<double> uploadWithProgress(
    String? bucket,
    String? path,
    _i4.File? file, {
    Map<String, String>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadWithProgress,
          [
            bucket,
            path,
            file,
          ],
          {#metadata: metadata},
        ),
        returnValue: _i3.Stream<double>.empty(),
      ) as _i3.Stream<double>);

  @override
  _i3.Future<_i6.Uint8List> downloadFile(
    String? bucket,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [
            bucket,
            path,
          ],
        ),
        returnValue: _i3.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
      ) as _i3.Future<_i6.Uint8List>);

  @override
  String getPublicUrl(
    String? bucket,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPublicUrl,
          [
            bucket,
            path,
          ],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #getPublicUrl,
            [
              bucket,
              path,
            ],
          ),
        ),
      ) as String);

  @override
  _i3.Future<void> deleteFile(
    String? bucket,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFile,
          [
            bucket,
            path,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i7.FileObject>> listFiles(
    String? bucket, {
    String? prefix,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listFiles,
          [bucket],
          {#prefix: prefix},
        ),
        returnValue: _i3.Future<List<_i7.FileObject>>.value(<_i7.FileObject>[]),
      ) as _i3.Future<List<_i7.FileObject>>);

  @override
  _i3.Future<String> createSignedUrl(
    String? bucket,
    String? path, {
    Duration? expiresIn = const Duration(hours: 1),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSignedUrl,
          [
            bucket,
            path,
          ],
          {#expiresIn: expiresIn},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #createSignedUrl,
            [
              bucket,
              path,
            ],
            {#expiresIn: expiresIn},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> moveFile(
    String? bucket,
    String? fromPath,
    String? toPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveFile,
          [
            bucket,
            fromPath,
            toPath,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> copyFile(
    String? bucket,
    String? fromPath,
    String? toPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyFile,
          [
            bucket,
            fromPath,
            toPath,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> getFileInfo(
    String? bucket,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileInfo,
          [
            bucket,
            path,
          ],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getCacheStats() => (super.noSuchMethod(
        Invocation.method(
          #getCacheStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.Future<void> createBucket(
    String? bucketName, {
    bool? isPublic = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBucket,
          [bucketName],
          {#isPublic: isPublic},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i7.Bucket>> listBuckets() => (super.noSuchMethod(
        Invocation.method(
          #listBuckets,
          [],
        ),
        returnValue: _i3.Future<List<_i7.Bucket>>.value(<_i7.Bucket>[]),
      ) as _i3.Future<List<_i7.Bucket>>);

  @override
  _i3.Future<void> deleteBucket(String? bucketName) => (super.noSuchMethod(
        Invocation.method(
          #deleteBucket,
          [bucketName],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [SupabaseFileSystemService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseFileSystemService extends _i1.Mock
    implements _i8.SupabaseFileSystemService {
  MockSupabaseFileSystemService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> startWatching(String? repositoryId) => (super.noSuchMethod(
        Invocation.method(
          #startWatching,
          [repositoryId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> stopWatching(String? repositoryId) => (super.noSuchMethod(
        Invocation.method(
          #stopWatching,
          [repositoryId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> uploadRepositoryFile({
    required String? repositoryId,
    required String? filePath,
    required _i4.File? file,
    Map<String, String>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadRepositoryFile,
          [],
          {
            #repositoryId: repositoryId,
            #filePath: filePath,
            #file: file,
            #metadata: metadata,
          },
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #uploadRepositoryFile,
            [],
            {
              #repositoryId: repositoryId,
              #filePath: filePath,
              #file: file,
              #metadata: metadata,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<_i6.Uint8List> downloadRepositoryFile({
    required String? repositoryId,
    required String? filePath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadRepositoryFile,
          [],
          {
            #repositoryId: repositoryId,
            #filePath: filePath,
          },
        ),
        returnValue: _i3.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
      ) as _i3.Future<_i6.Uint8List>);

  @override
  _i3.Future<void> updateRepositoryFile({
    required String? repositoryId,
    required String? filePath,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRepositoryFile,
          [],
          {
            #repositoryId: repositoryId,
            #filePath: filePath,
            #content: content,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteRepositoryFile({
    required String? repositoryId,
    required String? filePath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteRepositoryFile,
          [],
          {
            #repositoryId: repositoryId,
            #filePath: filePath,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i8.CloudFileInfo>> listRepositoryFiles({
    required String? repositoryId,
    String? pathPrefix,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listRepositoryFiles,
          [],
          {
            #repositoryId: repositoryId,
            #pathPrefix: pathPrefix,
          },
        ),
        returnValue:
            _i3.Future<List<_i8.CloudFileInfo>>.value(<_i8.CloudFileInfo>[]),
      ) as _i3.Future<List<_i8.CloudFileInfo>>);

  @override
  _i3.Future<List<_i8.CloudFileSearchResult>> searchFiles({
    required String? repositoryId,
    required String? query,
    List<String>? fileTypes,
    bool? caseSensitive = false,
    int? maxResults = 100,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchFiles,
          [],
          {
            #repositoryId: repositoryId,
            #query: query,
            #fileTypes: fileTypes,
            #caseSensitive: caseSensitive,
            #maxResults: maxResults,
          },
        ),
        returnValue: _i3.Future<List<_i8.CloudFileSearchResult>>.value(
            <_i8.CloudFileSearchResult>[]),
      ) as _i3.Future<List<_i8.CloudFileSearchResult>>);

  @override
  _i3.Future<bool> lockFile({
    required String? repositoryId,
    required String? filePath,
    Duration? lockDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #lockFile,
          [],
          {
            #repositoryId: repositoryId,
            #filePath: filePath,
            #lockDuration: lockDuration,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> unlockFile({
    required String? repositoryId,
    required String? filePath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlockFile,
          [],
          {
            #repositoryId: repositoryId,
            #filePath: filePath,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i8.FileLock? getFileLock({
    required String? repositoryId,
    required String? filePath,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getFileLock,
        [],
        {
          #repositoryId: repositoryId,
          #filePath: filePath,
        },
      )) as _i8.FileLock?);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CrossPlatformStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrossPlatformStorageService extends _i1.Mock
    implements _i10.CrossPlatformStorageService {
  MockCrossPlatformStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  _i3.Future<void> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  _i3.Future<void> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  _i3.Future<void> setObject(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setObject,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  Map<String, dynamic>? getObject(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getObject,
        [key],
      )) as Map<String, dynamic>?);

  @override
  _i3.Future<void> setList(
    String? key,
    List<dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  List<dynamic>? getList(String? key) => (super.noSuchMethod(Invocation.method(
        #getList,
        [key],
      )) as List<dynamic>?);

  @override
  _i3.Future<void> saveSession(Map<String, dynamic>? sessionData) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSession,
          [sessionData],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearSession() => (super.noSuchMethod(
        Invocation.method(
          #clearSession,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveAuthToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveAuthToken,
          [token],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveProjectData(
    String? projectId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProjectData,
          [
            projectId,
            data,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  Map<String, dynamic>? getProjectData(String? projectId) =>
      (super.noSuchMethod(Invocation.method(
        #getProjectData,
        [projectId],
      )) as Map<String, dynamic>?);

  @override
  _i3.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveUserDataToCloud(
    String? key,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserDataToCloud,
          [
            key,
            data,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>?> loadUserDataFromCloud(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadUserDataFromCloud,
          [key],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<void> syncWithCloud() => (super.noSuchMethod(
        Invocation.method(
          #syncWithCloud,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> restoreFromCloud() => (super.noSuchMethod(
        Invocation.method(
          #restoreFromCloud,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> uploadUserFile(
    _i4.File? file,
    String? fileName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadUserFile,
          [
            file,
            fileName,
          ],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<_i4.File?> downloadUserFile(String? fileName) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUserFile,
          [fileName],
        ),
        returnValue: _i3.Future<_i4.File?>.value(),
      ) as _i3.Future<_i4.File?>);

  @override
  Map<String, dynamic> getStorageInfo() => (super.noSuchMethod(
        Invocation.method(
          #getStorageInfo,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
